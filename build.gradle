plugins {
    id 'java'
    id 'eclipse'
    id 'jacoco'
    id 'checkstyle'

    id 'org.starchartlabs.flare.dependency-constraints' version '1.0.0'
    id 'org.starchartlabs.flare.increased-test-logging' version '1.0.0'
    id 'org.starchartlabs.flare.source-jars' version '1.0.0'
    
    id 'it.gianluz.capsule' version '1.0.3'
}

description = 'Command line interface for managing encrypted credential files'

dependencyConstraints {
    file file("${rootDir}/dependencies.properties")
}

//Always download sources, to allow debugging, and use Eclipse containers for greater portability
eclipse {
    classpath {
        downloadSources=true
    }
}

//Need to exclude the real logger from test runs, so use a special configuration to side-step its inclusion in test runs
configurations {
    capsuleRuntime{
        extendsFrom runtime
    }
}

repositories { mavenCentral() }

dependencies {
    compileOnly 'com.google.code.findbugs:jsr305'
    
    compile 'com.google.code.gson:gson'
    compile 'com.squareup.okhttp3:okhttp'
    compile 'commons-codec:commons-codec'
    compile 'info.picocli:picocli'
    compile 'org.slf4j:slf4j-api'
    compile 'org.starchartlabs.alloy:alloy-core'
    
    capsuleRuntime 'org.slf4j:slf4j-simple'
    
    testCompile 'com.squareup.okhttp3:mockwebserver'
    testCompile 'org.testng:testng'
    testCompile 'uk.org.lidalia:slf4j-test'
}

//Setup default test behavior, including failure logging
test {
    useTestNG() { useDefaultListeners = true }
}

checkstyle {
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
    configProperties = [ 'checkstyle.config.dir' : rootProject.file('config/checkstyle') ]
    toolVersion = '8.29'
}
 
task checkstyleAll{}
 
tasks.withType(Checkstyle).all { checkstyleTask -> checkstyleAll.dependsOn checkstyleTask }
 
check.dependsOn checkstyleAll

//Apply module naming to all projects
//Add LICENSE so it is included in all JARs, as well as dependent licenses, fulfilling the "distributions include license" requirement
jar {
    from("${rootDir}"){ include 'LICENSE' }
}

//All projects should provide source code and javadoc, and upload these with any released artifacts
sourcesJar {
    from("${rootDir}"){ include 'LICENSE' }
}

javadocJar{
    from("${rootDir}"){ include 'LICENSE' }
}

task distCapsule(type: FatCapsule) {
    applicationClass 'org.starchartlabs.lure.CommandLineInterface'
    embedConfiguration configurations.capsuleRuntime
}

tasks.assemble.dependsOn distCapsule

artifacts {
    archives distCapsule
}
